{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\fnil\fcharset0 Consolas-Bold;\f1\fnil\fcharset0 Consolas;}
{\colortbl;\red255\green255\blue255;\red38\green38\blue38;\red255\green255\blue255;\red128\green61\blue100;
\red213\green58\blue6;\red14\green114\blue164;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl336

\f0\b\fs24 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 def
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 leaves
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (tree):\cb1 \
\pard\pardeftab720\sl336
\cf2 \cb3     \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 """Finds NP (nounphrase) leaf nodes of a chunk tree."""\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 for
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  subtree 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  tree
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 subtrees(\cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 filter\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 lambda
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  t: t
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 node
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ==
\f1\b0 \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 'NP'\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 ):\cb1 \
\cb3         
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 yield
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  subtree
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 leaves()\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl336

\f0\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 def
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 normalise
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (word):\cb1 \
\pard\pardeftab720\sl336
\cf2 \cb3     \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 """Normalises words to lowercase and stems and lemmatizes it."""\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cb3     word 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  word
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 lower()\cb1 \
\cb3     word 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  stemmer
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 stem_word(word)\cb1 \
\cb3     word 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  lemmatizer
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 lemmatize(word)\cb1 \
\cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 return
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  word\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl336

\f0\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 def
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 acceptable_word
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (word):\cb1 \
\pard\pardeftab720\sl336
\cf2 \cb3     \cf5 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec5 """Checks conditions for acceptable word: length, stopword."""\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cb3     accepted 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 bool\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (\cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 2\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2  
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <=
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  \cf6 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec6 len\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (word) 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 <=
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 40\cf2 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \
\cb3         
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 and
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  word
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 .
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 lower() 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 not
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  stopwords)\cb1 \
\cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 return
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  accepted\cb1 \
\cb3 \'a0\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl336

\f0\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 def
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\f0\b \cf4 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec4 get_terms
\f1\b0 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (tree):\cb1 \
\pard\pardeftab720\sl336
\cf2 \cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 for
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  leaf 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  leaves(tree):\cb1 \
\cb3         term 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  [ normalise(w) 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 for
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  w,t 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  leaf 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 if
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  acceptable_word(w) ]\cb1 \
\cb3         
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 yield
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  term\cb1 \
\cb3 \'a0\cb1 \
\cb3 terms 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 =
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  get_terms(tree)\cb1 \
\cb3 \'a0\cb1 \
\pard\pardeftab720\sl336

\f0\b \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 for
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  term 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  terms:\cb1 \
\pard\pardeftab720\sl336
\cf2 \cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 for
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  word 
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 in
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  term:\cb1 \
\cb3         
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 print
\f1\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  word,\cb1 \
\cb3     
\f0\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 print
\f1\b0 \cb1 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
}